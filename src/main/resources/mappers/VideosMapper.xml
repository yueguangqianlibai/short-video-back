<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xtang.dao.VideosMapper">
    <resultMap id="BaseResultMap" type="com.xtang.pojo.Videos">
        <constructor>
            <idArg column="id" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="user_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="audio_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="video_desc" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="video_path" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="video_seconds" javaType="java.lang.Float" jdbcType="REAL"/>
            <arg column="video_width" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="video_heigh" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="cover_path" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="like_counts" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        id,
        user_id,
        audio_id,
        video_desc,
        video_path,
        video_seconds,
        video_width,
        video_heigh,
        cover_path,
        like_counts,
        status,
        create_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_videos
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete
        from t_videos
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.xtang.pojo.Videos">
        insert into t_videos (id, user_id, audio_id,
                              video_desc, video_path, video_seconds,
                              video_width, video_heigh, cover_path,
                              like_counts, status, create_time)
        values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{audioId,jdbcType=VARCHAR},
                #{videoDesc,jdbcType=VARCHAR}, #{videoPath,jdbcType=VARCHAR}, #{videoSeconds,jdbcType=REAL},
                #{videoWidth,jdbcType=INTEGER}, #{videoHeigh,jdbcType=INTEGER}, #{coverPath,jdbcType=VARCHAR},
                #{likeCounts,jdbcType=BIGINT}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.xtang.pojo.Videos">
        insert into t_videos
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="audioId != null">
                audio_id,
            </if>
            <if test="videoDesc != null">
                video_desc,
            </if>
            <if test="videoPath != null">
                video_path,
            </if>
            <if test="videoSeconds != null">
                video_seconds,
            </if>
            <if test="videoWidth != null">
                video_width,
            </if>
            <if test="videoHeigh != null">
                video_heigh,
            </if>
            <if test="coverPath != null">
                cover_path,
            </if>
            <if test="likeCounts != null">
                like_counts,
            </if>
            <if test="status != null">
                status,
            </if>
            create_time,
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="audioId != null">
                #{audioId,jdbcType=VARCHAR},
            </if>
            <if test="videoDesc != null">
                #{videoDesc,jdbcType=VARCHAR},
            </if>
            <if test="videoPath != null">
                #{videoPath,jdbcType=VARCHAR},
            </if>
            <if test="videoSeconds != null">
                #{videoSeconds,jdbcType=REAL},
            </if>
            <if test="videoWidth != null">
                #{videoWidth,jdbcType=INTEGER},
            </if>
            <if test="videoHeigh != null">
                #{videoHeigh,jdbcType=INTEGER},
            </if>
            <if test="coverPath != null">
                #{coverPath,jdbcType=VARCHAR},
            </if>
            <if test="likeCounts != null">
                #{likeCounts,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            now(),
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xtang.pojo.Videos">
        update t_videos
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="audioId != null">
                audio_id = #{audioId,jdbcType=VARCHAR},
            </if>
            <if test="videoDesc != null">
                video_desc = #{videoDesc,jdbcType=VARCHAR},
            </if>
            <if test="videoPath != null">
                video_path = #{videoPath,jdbcType=VARCHAR},
            </if>
            <if test="videoSeconds != null">
                video_seconds = #{videoSeconds,jdbcType=REAL},
            </if>
            <if test="videoWidth != null">
                video_width = #{videoWidth,jdbcType=INTEGER},
            </if>
            <if test="videoHeigh != null">
                video_heigh = #{videoHeigh,jdbcType=INTEGER},
            </if>
            <if test="coverPath != null">
                cover_path = #{coverPath,jdbcType=VARCHAR},
            </if>
            <if test="likeCounts != null">
                like_counts = #{likeCounts,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xtang.pojo.Videos">
        update t_videos
        set user_id       = #{userId,jdbcType=VARCHAR},
            audio_id      = #{audioId,jdbcType=VARCHAR},
            video_desc    = #{videoDesc,jdbcType=VARCHAR},
            video_path    = #{videoPath,jdbcType=VARCHAR},
            video_seconds = #{videoSeconds,jdbcType=REAL},
            video_width   = #{videoWidth,jdbcType=INTEGER},
            video_heigh   = #{videoHeigh,jdbcType=INTEGER},
            cover_path    = #{coverPath,jdbcType=VARCHAR},
            like_counts   = #{likeCounts,jdbcType=BIGINT},
            status        = #{status,jdbcType=INTEGER},
            create_time   = #{createTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <select id="selectByUserId" parameterType="string" resultMap="BaseResultMap">
        select *
        from t_videos
        where user_id = #{userId}
    </select>

    <select id="selectUserLikeVideoByUserId" parameterType="string" resultMap="BaseResultMap">
        SELECT v.*,
               u.face_image AS face_image,
               u.nickname   AS nickname
        FROM t_videos v
                 LEFT JOIN t_users u ON v.user_id = u.id
        WHERE v.id IN (SELECT ulv.video_id FROM t_users_like_videos ulv WHERE ulv.user_id = #{userId})
          AND v.STATUS = 1
        ORDER BY v.create_time DESC
    </select>

</mapper>